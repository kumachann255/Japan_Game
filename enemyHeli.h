//=============================================================================
//
// エネミーヘリモデル処理 [enemyHeli.h]
// Author : 
//
//=============================================================================
#pragma once


//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_HELI		(5)					// エネミーヘリの数

#define	HELI_SIZE		(5.0f)				// 当たり判定の大きさ

// ヘリのベジェ曲線繰り返し用enum
enum
{
	TO_GO,				// ベジェ曲線行き
	RETURN				// ベジェ曲線帰り
};

// ヘリのベジェ曲線パターン生成用enum
enum
{
	PATTERN_01,			// ベジェ曲線パターン1
	PATTERN_02				// ベジェ曲線パターン2
};

//*****************************************************************************
// 構造体定義
//*****************************************************************************
struct HELI
{
	XMFLOAT3			pos;			// ポリゴンの位置
	XMFLOAT3			rot;			// ポリゴンの向き(回転)
	XMFLOAT3			scl;			// ポリゴンの大きさ(スケール)

	XMFLOAT4X4			mtxWorld;		// ワールドマトリックス

	BOOL				load;
	DX11_MODEL			model;			// モデル情報

	float				spd;			// 移動スピード
	float				dir;			// 向き
	float				size;			// 当たり判定の大きさ

	int					shadowIdx;		// 影のIndex
	int					switchFlag;		// ヘリの往復変更用フラグ
	int					patternFlag;	// ヘリの動きパターン変更用フラグ

	BOOL				use;

	float				speed;		// 移動スピード
	float				time;		// 時間

	// 親は、NULL、子供は親のアドレスを入れる
	HELI				*parent;	// 自分が親ならNULL、自分が子供なら親のheliアドレス

};

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitHeli(void);
void UninitHeli(void);
void UpdateHeli(void);
void DrawHeli(void);

HELI *GetHeli(void);

